"Cuando programamos tenemos multitud de paradigmas que debemos resolver, en función de la dificultad del algoritmo que tengamos que realizar las respuestas pueden ser mas o menos claras.Usar pre y post condiciones nos ayuda a facilitar el proceso de programación y validar los procesos realizados por la función.Dicho de otra manera, son las condiciones que se han de cumplir para procesar el algoritmo de la función y la condición que se ha de cumplir tras el procesamiento del algoritmo.pongamos un ejemplo, una persona trabaja en una panadería y sabe que a las 7am las barras de pan tienen que estar listos.En este ejemplo tenemos 3 fases, la preparación del panadero para realizar las barras, la propia elaboración de las barras y los productos elaborados en las estanterías.En este supuesto las pre condiciones son todos los ingredientes necesarios para realizar las barras de pan y el panadero listo para elaborarlasLa función es la propia elaboración de las barrasLas post condiciones es que las barras se han hecho perfectamente y están listas para la venta.en resumen:pre condición es una condición la cual, si no se cumple, no se puede ejecutar la funciónLa post condición es una condición que, una vez ejecutado el algoritmo de la función, nos devuelve un valor dentro de unas premisas estimadas.","Para poder usar las pre condiciones en C tenemos que añadir la cabecera assert.hEn C las pre condiciones se les llama aserciones y para poder insertar una la hacemos con el siguiente formato:assert(condicion);si no se cumple la condición el código falla y nos da un error.Un ejemplo de condición en C, supongamos que tenemos una función que nos pasa como valor de entrada un numero comprendido entre el 1 y el 9, cualquier numero menor que 1 o mayor que 9 no esta admitido:int checkNumber(int a) {    assert(a>0 && a<10);    return a;}En este caso si no se cumple la aserción en vez de devolvernos el valor de a nos dará un error"